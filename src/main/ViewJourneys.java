/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package main;

import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.event.TableModelEvent;
import javax.swing.event.TableModelListener;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import static main.DispatchAccount.APP_TITLE;

/**
 * A class to display saved journey data
 * @author MBEAH
 */
public class ViewJourneys extends javax.swing.JFrame implements TableModelListener {
    
    private JourneyMedium medium;
    private String dispatchUsername;//dispatch username  property
    private String dispatchName;//dispatch id property
    
    /**
     * Creates new form DisplayData
     */
    public ViewJourneys() {
        this.setTitle(APP_TITLE);
        initComponents(); 
//        jProgressBar1.setVisible(false);
        loadData();
        listen();
    }

    /**
     * Constructor for Frame
     * @param dispatchUsername the username of the dispatcher
     * @param dispatchName the name of the dispatcher
     */
    public ViewJourneys(String dispatchUsername, String dispatchName) {
        this.setTitle(APP_TITLE);
        this.dispatchUsername = dispatchUsername;
        this.dispatchName = dispatchName;
        initComponents(); 
//        jProgressBar1.setVisible(false);
        dispatchLabel.setText(dispatchName);
        loadData();
        listen();
    }
    
    //listen for changes to content in table
    private void listen(){
        dataTable.getModel().addTableModelListener(this); //add data change listener to table
    }
    
    //Listener method for data changes in the table, autosaves the changes
    @Override
    public void tableChanged(TableModelEvent e) {
        
        jProgressBar1.setVisible(true);
        
        int row = e.getFirstRow();//get row
        int column = e.getColumn(); // get column
         DefaultTableModel model = (DefaultTableModel) e.getSource();
//        String columnName = model.getColumnName(column); //get column name
        Object data = model.getValueAt(row, column); // get changed data
        Object id = model.getValueAt(row, 0); // get journey id of changed data
        
//        System.out.println("Column name: "+columnName+" | Data: "+data);
//        System.out.println("ID name: "+id);
        
        Journey journey = medium.findJourney((String)id); // get journey with id
        //switch through column id to find field that was changed
        // IMPORTANT - column id's are in order of which they are displayed in table
        switch(column){
            case 1:
                journey.setStartTime((String)data);
                break;
            case 2:
                journey.setPickupPoint((String)data);
                break;
            case 3:
                journey.setDestination((String)data);
                break;
            case 4:
                journey.setDriversId((int)data);
                break;
            case 5:
                journey.setPassengerName((String)data);
                break;
            case 6:
                journey.setAccountName((String)data);
                break;
            case 7:
                journey.setPhoneNumber((String)data);
                break;
            case 8:
                journey.setFare((double)data);
                break;
            case 9:
                journey.setOptionalTip((double)data);
                break;
            default:
                break;
        }
        
        medium.updateJourney(journey);// save changes
        JOptionPane.showMessageDialog( this, "Journey Updated!");
        jProgressBar1.setVisible(false);
    }

    //populate table with data from database
    private void loadData(){
        DefaultTableModel model = (DefaultTableModel) dataTable.getModel();
        
        medium = new JourneyMedium();
        ArrayList<Journey> journeys = medium.getJourneys();
        
        
        for (int i = 0; i < journeys.size(); i++) {
            Journey journey = journeys.get(i);
            Object[] row = {journey.getJourneyId(),journey.getStartTime(),journey.getPickupPoint(),
            journey.getDestination(),journey.getDriversId(),journey.getPassengerName(),journey.getAccountName(),
            journey.getPhoneNumber(),journey.getFare(),journey.getOptionalTip(),journey.getDate()};
           model.addRow(row);
        }
        jProgressBar1.setVisible(false);
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        dataTable = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        goBack = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        dispatchLabel = new javax.swing.JLabel();
        jProgressBar1 = new javax.swing.JProgressBar();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setPreferredSize(new java.awt.Dimension(800, 437));
        setSize(new java.awt.Dimension(800, 300));

        dataTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Journey ID", "Start Time", "Pickup Point", "Destination", "Driver ID", "Passenger", "Account Name", "Phone Number", "Fare", "Optional Tip", "Date"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Double.class, java.lang.Double.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, true, true, true, true, true, true, true, true, true, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        dataTable.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jScrollPane1.setViewportView(dataTable);

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel1.setText("JOURNEYS");

        jLabel2.setForeground(new java.awt.Color(153, 0, 153));
        jLabel2.setText("Double click in a cell to edit its content (Journey Id and Date are not Editable)");

        goBack.setText("Go Back");
        goBack.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                goBackMouseClicked(evt);
            }
        });

        jLabel3.setText("DISPATCHER:");

        dispatchLabel.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        dispatchLabel.setForeground(new java.awt.Color(51, 153, 0));

        jProgressBar1.setIndeterminate(true);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(jLabel1)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 228, Short.MAX_VALUE)
                                .addComponent(goBack)))
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(dispatchLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jProgressBar1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(106, 106, 106))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel2)
                    .addComponent(goBack))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(dispatchLabel))
                        .addGap(14, 14, 14)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 402, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jProgressBar1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void goBackMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_goBackMouseClicked
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_goBackMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ViewJourneys.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ViewJourneys.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ViewJourneys.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ViewJourneys.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ViewJourneys().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable dataTable;
    private javax.swing.JLabel dispatchLabel;
    private javax.swing.JButton goBack;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JProgressBar jProgressBar1;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
